package algorithmsBasics;

import java.util.ArrayList;
import java.util.Scanner;

public class BinarySearch {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int find = sc.nextInt();
        int list[]= SortedList();
        int IndexOfElement =  BinarySearchRecursive(list,0,list.length-1,find);
        System.out.println(IndexOfElement);
        IndexOfElement = BinarySearchIterative(list,find);
        System.out.println(IndexOfElement);

    }


    public static int BinarySearchRecursive(int[] list, int start, int end, int find){
        int mid = start + (end - start)/2;
        if ( list[mid] == find) return mid;
        else{
            if ( end - start == 0) return -1;
            if (list[mid] < find) return  BinarySearchRecursive(list,mid+1,end,find);
            else  return  BinarySearchRecursive(list,start,mid-1,find);
        }
    }


    public static int BinarySearchIterative ( int[] list, int find){
        int start =0, end = list.length-1;
        while (start <= end){
            int mid = (start + end)/2;
            if ( list[mid] == find) return mid;
            else if ( list[mid] > find) end = mid-1;
            else start = mid + 1;
        }
        return  -1;
    }

//    public static boolean LinearSearch



    public static int[] SortedList() {

        //list of 10 integers between 0 and 100
        int[] temp1 = {2, 2, 2, 3, 4, 6, 7, 9, 9, 9};

        //list of 40 integers between 0 and 100
        int[] temp2 = {0, 1, 2, 3, 4, 6, 7, 8, 9, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 30, 34, 39, 42, 43, 44, 61, 62, 64, 67, 70, 78, 80, 84, 88, 92, 93, 94, 99};

        //list of 99 integers between 0 and 100
        int[] temp3 = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100};

        //list of 500 integers between 0 and 1000
        int[] temp4 = {2, 3, 5, 6, 7, 10, 12, 14, 15, 17, 20, 22, 23, 25, 26, 27, 28, 29, 33, 38, 39, 41, 44, 47, 48, 49, 52, 54, 56, 58, 62, 63, 66, 68, 69, 71, 72, 76, 77, 78, 84, 87, 88, 89, 92, 94, 97, 98, 99, 100, 102, 105, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 132, 134, 139, 140, 142, 145, 147, 151, 152, 153, 156, 162, 164, 166, 167, 171, 172, 176, 179, 180, 182, 184, 190, 192, 194, 201, 205, 206, 208, 210, 212, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 231, 232, 233, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 252, 254, 257, 261, 263, 266, 268, 271, 273, 275, 276, 277, 278, 279, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 297, 299, 300, 304, 305, 307, 308, 309, 310, 313, 314, 317, 318, 320, 322, 324, 327, 330, 331, 332, 334, 338, 343, 346, 352, 354, 355, 359, 360, 361, 368, 370, 375, 376, 380, 382, 383, 384, 386, 389, 393, 396, 397, 398, 400, 402, 408, 411, 412, 415, 417, 419, 420, 421, 424, 426, 428, 429, 431, 432, 433, 435, 438, 443, 446, 448, 449, 452, 454, 459, 463, 464, 470, 471, 472, 473, 474, 478, 479, 481, 482, 483, 485, 487, 488, 492, 493, 494, 501, 502, 503, 504, 507, 508, 512, 513, 515, 516, 517, 518, 520, 521, 522, 524, 528, 530, 533, 536, 537, 539, 540, 541, 542, 547, 549, 550, 552, 553, 558, 559, 560, 562, 563, 566, 567, 568, 572, 574, 576, 580, 581, 585, 586, 588, 589, 591, 592, 593, 594, 595, 598, 600, 601, 604, 605, 607, 609, 611, 612, 613, 615, 617, 618, 619, 620, 622, 626, 629, 630, 631, 633, 636, 638, 639, 641, 645, 650, 652, 653, 654, 655, 656, 658, 666, 667, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 715, 719, 721, 722, 724, 726, 727, 728, 730, 732, 733, 734, 736, 737, 741, 742, 743, 745, 747, 749, 750, 751, 761, 763, 764, 770, 772, 774, 776, 777, 778, 779, 782, 783, 784, 788, 789, 793, 794, 795, 797, 800, 802, 804, 805, 806, 807, 808, 811, 813, 814, 817, 818, 819, 820, 822, 824, 825, 828, 829, 830, 831, 832, 834, 836, 838, 840, 842, 843, 845, 846, 847, 848, 849, 851, 854, 855, 856, 858, 859, 860, 862, 865, 871, 872, 875, 877, 879, 880, 883, 890, 892, 893, 895, 896, 897, 898, 900, 907, 908, 912, 913, 916, 917, 919, 923, 926, 927, 928, 930, 931, 932, 933, 936, 940, 941, 942, 943, 944, 946, 948, 950, 953, 956, 960, 963, 965, 969, 970, 971, 972, 978, 979, 980, 981, 985, 986, 987, 990, 997, 999};

        //list of 1000 integers between 0 and 2000
        int[] temp6 = {};

        return temp1;
    }
}
